name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout du code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Login à GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 3. Setup Node.js pour exécuter les tests
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      # 4. Installer dépendances et lancer tests API
      - name: Install deps & run tests
        working-directory: ./app/api
        run: |
          npm ci
          NODE_OPTIONS=--experimental-vm-modules npx jest --runInBand

      # 5. Build & Push API Docker image
      - name: Build & Push API Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/timi-api:latest ./app/api
          docker push ghcr.io/${{ github.repository_owner }}/timi-api:latest

      # 6. Build & Push Frontend Docker image
      - name: Build & Push Frontend Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/timi-frontend:latest ./app/frontend
          docker push ghcr.io/${{ github.repository_owner }}/timi-frontend:latest
