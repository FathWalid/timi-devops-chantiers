name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        ports: ['5433:5432']
        env:
          POSTGRES_USER: timi
          POSTGRES_PASSWORD: timi
          POSTGRES_DB: timi_test
        options: >-
          --health-cmd="pg_isready -U timi -d timi_test"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # --- API ---
      - name: Set up Node.js for API
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: app/api/package-lock.json

      - name: Install API dependencies
        run: npm ci
        working-directory: ./app/api

      - name: Run API tests
        env:
          DATABASE_URL: postgres://timi:timi@localhost:5433/timi_test
        run: npm test
        working-directory: ./app/api

      # --- FRONTEND ---
      - name: Set up Node.js for Frontend
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: app/frontend/package-lock.json

      - name: Install Frontend dependencies
        run: npm ci
        working-directory: ./app/frontend

      - name: Run Frontend build
        run: npm run build
        working-directory: ./app/frontend

      # --- DOCKER LOGIN ---
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # --- DOCKER BUILD & PUSH API ---
      - name: Build and push API image
        run: |
          IMAGE_API=ghcr.io/${{ github.repository_owner }}/timi-api:latest
          IMAGE_API=$(echo $IMAGE_API | tr '[:upper:]' '[:lower:]')
          docker build -t $IMAGE_API ./app/api
          docker push $IMAGE_API

      # --- DOCKER BUILD & PUSH FRONTEND ---
      - name: Build and push Frontend image
        run: |
          IMAGE_FRONT=ghcr.io/${{ github.repository_owner }}/timi-frontend:latest
          IMAGE_FRONT=$(echo $IMAGE_FRONT | tr '[:upper:]' '[:lower:]')
          docker build -t $IMAGE_FRONT ./app/frontend
          docker push $IMAGE_FRONT
