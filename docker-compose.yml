version: "3.9"

services:
  # === Base principale ===
  db:
    image: postgres:16-alpine
    container_name: timi-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-timi}
      POSTGRES_USER: ${POSTGRES_USER:-timi}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-timi}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 10

  # === API Node.js ===
  api:
    build: ./app/api
    container_name: timi-api
    environment:
      API_PORT: ${API_PORT:-5000}
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_URL: postgres://timi:timi@db:5432/timi
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy

  # === Frontend React (Nginx) ===
  frontend:
    build: ./app/frontend
    container_name: timi-frontend
    ports:
      - "3000:80"   # ðŸ‘‰ Frontend dispo sur http://localhost:3000
    depends_on:
      - api

  # === Base de test ===
  db_test:
    image: postgres:15
    container_name: timi-db-test
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: timi_test
    ports:
      - "5433:5432"
    volumes:
      - db_test_data:/var/lib/postgresql/data

# === Volumes persistants ===
volumes:
  pgdata:
  db_test_data:
